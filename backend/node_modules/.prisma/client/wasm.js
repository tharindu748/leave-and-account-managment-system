
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  isAdmin: 'isAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  refreshToken: 'refreshToken',
  employeeId: 'employeeId',
  cardNumber: 'cardNumber',
  validFrom: 'validFrom',
  validTo: 'validTo',
  epfNo: 'epfNo',
  nic: 'nic',
  jobPosition: 'jobPosition',
  imagePath: 'imagePath',
  active: 'active',
  joinDate: 'joinDate',
  address: 'address'
};

exports.Prisma.Leave_requestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  approvedBy: 'approvedBy',
  leaveType: 'leaveType',
  status: 'status',
  reason: 'reason',
  requestedAt: 'requestedAt',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt'
};

exports.Prisma.Leave_request_dateScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  leaveDate: 'leaveDate',
  isHalfDay: 'isHalfDay',
  halfdayType: 'halfdayType'
};

exports.Prisma.Leave_balanceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  year: 'year',
  leaveType: 'leaveType',
  balance: 'balance'
};

exports.Prisma.Leave_policyScalarFieldEnum = {
  leaveType: 'leaveType',
  defaultBalance: 'defaultBalance'
};

exports.Prisma.SyncHistoryScalarFieldEnum = {
  id: 'id',
  syncTime: 'syncTime',
  totalUsers: 'totalUsers',
  newUsers: 'newUsers',
  updatedUsers: 'updatedUsers',
  status: 'status'
};

exports.Prisma.PunchScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  eventTime: 'eventTime',
  correctEventTime: 'correctEventTime',
  direction: 'direction',
  source: 'source',
  note: 'note',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  deletedAt: 'deletedAt',
  directionCorrected: 'directionCorrected',
  originalDirection: 'originalDirection',
  correctedBy: 'correctedBy',
  correctionNote: 'correctionNote',
  correctedAt: 'correctedAt'
};

exports.Prisma.AttendanceDayScalarFieldEnum = {
  employeeId: 'employeeId',
  workDate: 'workDate',
  startTime: 'startTime',
  firstIn: 'firstIn',
  lastOut: 'lastOut',
  workedSeconds: 'workedSeconds',
  notWorkingSeconds: 'notWorkingSeconds',
  overtimeSeconds: 'overtimeSeconds',
  hadManual: 'hadManual',
  status: 'status',
  calculatedAt: 'calculatedAt'
};

exports.Prisma.DeviceConfigScalarFieldEnum = {
  id: 'id',
  ip: 'ip',
  username: 'username',
  passwordEnc: 'passwordEnc',
  lastEventTime: 'lastEventTime',
  authFailedAt: 'authFailedAt',
  authFailureCount: 'authFailureCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttendanceConfigScalarFieldEnum = {
  id: 'id',
  workStart: 'workStart',
  workEnd: 'workEnd',
  otEnd: 'otEnd',
  earlyStart: 'earlyStart',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SalaryConfigScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  basicSalary: 'basicSalary',
  otRate: 'otRate',
  allowance: 'allowance',
  deduction: 'deduction',
  effectiveFrom: 'effectiveFrom'
};

exports.Prisma.SalaryRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  month: 'month',
  year: 'year',
  basicSalary: 'basicSalary',
  totalLeave: 'totalLeave',
  leaveDeductions: 'leaveDeductions',
  overtimePay: 'overtimePay',
  netSalary: 'netSalary',
  generatedAt: 'generatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.LeaveType = exports.$Enums.LeaveType = {
  ANNUAL: 'ANNUAL',
  CASUAL: 'CASUAL'
};

exports.LeaveStatus = exports.$Enums.LeaveStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED'
};

exports.HalfdayType = exports.$Enums.HalfdayType = {
  MORNING: 'MORNING',
  AFTERNOON: 'AFTERNOON'
};

exports.Direction = exports.$Enums.Direction = {
  IN: 'IN',
  OUT: 'OUT'
};

exports.Source = exports.$Enums.Source = {
  device: 'device',
  manual: 'manual'
};

exports.AttendanceStatus = exports.$Enums.AttendanceStatus = {
  OK: 'OK',
  ABSENT: 'ABSENT',
  PARTIAL: 'PARTIAL',
  MANUAL: 'MANUAL'
};

exports.Prisma.ModelName = {
  User: 'User',
  Leave_request: 'Leave_request',
  Leave_request_date: 'Leave_request_date',
  Leave_balance: 'Leave_balance',
  Leave_policy: 'Leave_policy',
  SyncHistory: 'SyncHistory',
  Punch: 'Punch',
  AttendanceDay: 'AttendanceDay',
  DeviceConfig: 'DeviceConfig',
  AttendanceConfig: 'AttendanceConfig',
  SalaryConfig: 'SalaryConfig',
  SalaryRecord: 'SalaryRecord'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\AMC project\\Leave-Management-System-Amila\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\AMC project\\Leave-Management-System-Amila\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           Int       @id @default(autoincrement())\n  email        String    @unique\n  password     String\n  name         String\n  isAdmin      Boolean   @default(false)\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n  refreshToken String?\n  employeeId   String?   @unique @map(\"employee_id\")\n  cardNumber   String?   @map(\"card_number\")\n  validFrom    DateTime? @map(\"valid_from\")\n  validTo      DateTime? @map(\"valid_to\")\n  epfNo        String?   @map(\"epfNo\")\n  nic          String?   @map(\"NIC\")\n  jobPosition  String?   @map(\"jobPosition\")\n  imagePath    String?\n  active       Boolean   @default(true)\n\n  // âœ… ADD THESE MISSING FIELDS\n  joinDate DateTime? @map(\"join_date\")\n  address  String?\n\n  leaveRequests    Leave_request[] @relation(\"UserLeaveRequests\")\n  approvedRequests Leave_request[] @relation(\"ApprovedRequests\")\n\n  leaveBalances  Leave_balance[]\n  punches        Punch[]\n  attendanceDays AttendanceDay[]\n\n  salaryConfigs SalaryConfig[]\n  salaryRecords SalaryRecord[]\n  // SalaryConfig SalaryConfig[]\n  // SalaryRecord SalaryRecord[]\n\n  @@map(\"users\")\n}\n\nmodel Leave_request {\n  id          Int                  @id @default(autoincrement())\n  userId      Int\n  approvedBy  Int?\n  leaveType   LeaveType\n  status      LeaveStatus?         @default(PENDING)\n  reason      String?\n  // department  String?\n  requestedAt DateTime             @default(now())\n  approvedAt  DateTime?\n  rejectedAt  DateTime?\n  dates       Leave_request_date[]\n\n  user           User  @relation(\"UserLeaveRequests\", fields: [userId], references: [id], onDelete: Cascade)\n  approvedByUser User? @relation(\"ApprovedRequests\", fields: [approvedBy], references: [id])\n\n  @@map(\"leave_requests\")\n}\n\nmodel Leave_request_date {\n  id          Int           @id @default(autoincrement())\n  requestId   Int\n  leaveDate   DateTime\n  isHalfDay   Boolean       @default(false)\n  halfdayType HalfdayType?\n  request     Leave_request @relation(fields: [requestId], references: [id], onDelete: Cascade)\n\n  @@map(\"leave_request_dates\")\n}\n\nmodel Leave_balance {\n  id        Int       @id @default(autoincrement())\n  userId    Int\n  year      Int\n  leaveType LeaveType\n  balance   Float\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, year, leaveType])\n  @@map(\"leave_balances\")\n}\n\nmodel Leave_policy {\n  leaveType      LeaveType @id\n  defaultBalance Float\n\n  @@map(\"leave_policies\")\n}\n\nmodel SyncHistory {\n  id           Int      @id @default(autoincrement())\n  syncTime     DateTime @default(now()) @map(\"sync_time\")\n  totalUsers   Int      @map(\"total_users\")\n  newUsers     Int      @map(\"new_users\")\n  updatedUsers Int      @map(\"updated_users\")\n  status       String\n\n  @@map(\"sync_history\")\n}\n\nmodel Punch {\n  id                 Int        @id @default(autoincrement())\n  employeeId         String     @map(\"employee_id\")\n  eventTime          DateTime   @map(\"event_time\") @db.Timestamptz(0)\n  correctEventTime   DateTime?  @map(\"correct_event_time\") @db.Timestamptz(0) // NEW (nullable for backfill)\n  direction          Direction\n  source             Source\n  note               String?\n  createdBy          String?    @map(\"created_by\")\n  createdAt          DateTime   @default(now()) @map(\"created_at\") @db.Timestamptz(0)\n  deletedAt          DateTime?  @map(\"deleted_at\") @db.Timestamptz(0)\n  directionCorrected Boolean    @default(false) @map(\"direction_corrected\")\n  originalDirection  Direction? @map(\"original_direction\")\n  correctedBy        String?    @map(\"corrected_by\")\n  correctionNote     String?    @map(\"correction_note\")\n  correctedAt        DateTime?  @map(\"corrected_at\") @db.Timestamptz(0)\n\n  user User @relation(fields: [employeeId], references: [employeeId], onDelete: Cascade)\n\n  @@unique([employeeId, eventTime, direction, source])\n  @@index([employeeId, eventTime])\n  @@index([employeeId, correctEventTime])\n  @@map(\"punches\")\n}\n\nmodel AttendanceDay {\n  employeeId        String           @map(\"employee_id\")\n  workDate          DateTime         @map(\"work_date\")\n  startTime         String?          @map(\"start_time\")\n  firstIn           String?          @map(\"first_in\")\n  lastOut           String?          @map(\"last_out\")\n  workedSeconds     Int              @default(0) @map(\"worked_seconds\")\n  notWorkingSeconds Int              @default(0) @map(\"not_working_seconds\")\n  overtimeSeconds   Int              @default(0) @map(\"overtime_seconds\")\n  hadManual         Boolean          @default(false) @map(\"had_manual\")\n  status            AttendanceStatus @default(OK)\n  calculatedAt      DateTime         @default(now()) @map(\"calculated_at\")\n\n  user User @relation(fields: [employeeId], references: [employeeId], onDelete: Cascade)\n\n  @@id([employeeId, workDate])\n  @@index([workDate])\n  @@map(\"attendance_day\")\n}\n\nmodel DeviceConfig {\n  id               Int       @id\n  ip               String\n  username         String\n  passwordEnc      String\n  lastEventTime    String?\n  authFailedAt     DateTime? // When auth last failed\n  authFailureCount Int       @default(0) // Number of consecutive failures\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  @@map(\"device_configs\")\n}\n\nmodel AttendanceConfig {\n  id         Int      @id @default(autoincrement())\n  workStart  DateTime\n  workEnd    DateTime\n  otEnd      DateTime\n  earlyStart DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  @@map(\"attendance_config\")\n}\n\nenum LeaveType {\n  ANNUAL\n  CASUAL\n}\n\nenum LeaveStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  CANCELLED\n}\n\nenum HalfdayType {\n  MORNING\n  AFTERNOON\n}\n\nenum Direction {\n  IN\n  OUT\n}\n\nenum Source {\n  device\n  manual\n}\n\nenum AttendanceStatus {\n  OK\n  ABSENT\n  PARTIAL\n  MANUAL\n}\n\n/////// i add\n\n// In schema.prisma - add otRate to SalaryConfig if needed\nmodel SalaryConfig {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  basicSalary   Float\n  otRate        Float?   @default(0) // Add this line if you want to store OT rate\n  allowance     Float?   @default(0)\n  deduction     Float?   @default(0)\n  effectiveFrom DateTime @default(now())\n  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"salary_config\")\n}\n\nmodel SalaryRecord {\n  id              Int      @id @default(autoincrement())\n  userId          Int\n  month           Int\n  year            Int\n  basicSalary     Float\n  totalLeave      Int      @default(0)\n  leaveDeductions Float    @default(0)\n  overtimePay     Float    @default(0)\n  netSalary       Float\n  generatedAt     DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, month, year])\n  @@map(\"salary_records\")\n}\n",
  "inlineSchemaHash": "8e89cb909451797baf5f1194f978b5a882cea78c237fd66cdf2b76b15c19c698",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"cardNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"card_number\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"valid_from\"},{\"name\":\"validTo\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"valid_to\"},{\"name\":\"epfNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"epfNo\"},{\"name\":\"nic\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"NIC\"},{\"name\":\"jobPosition\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"jobPosition\"},{\"name\":\"imagePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"joinDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"join_date\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leaveRequests\",\"kind\":\"object\",\"type\":\"Leave_request\",\"relationName\":\"UserLeaveRequests\"},{\"name\":\"approvedRequests\",\"kind\":\"object\",\"type\":\"Leave_request\",\"relationName\":\"ApprovedRequests\"},{\"name\":\"leaveBalances\",\"kind\":\"object\",\"type\":\"Leave_balance\",\"relationName\":\"Leave_balanceToUser\"},{\"name\":\"punches\",\"kind\":\"object\",\"type\":\"Punch\",\"relationName\":\"PunchToUser\"},{\"name\":\"attendanceDays\",\"kind\":\"object\",\"type\":\"AttendanceDay\",\"relationName\":\"AttendanceDayToUser\"},{\"name\":\"salaryConfigs\",\"kind\":\"object\",\"type\":\"SalaryConfig\",\"relationName\":\"SalaryConfigToUser\"},{\"name\":\"salaryRecords\",\"kind\":\"object\",\"type\":\"SalaryRecord\",\"relationName\":\"SalaryRecordToUser\"}],\"dbName\":\"users\"},\"Leave_request\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leaveType\",\"kind\":\"enum\",\"type\":\"LeaveType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeaveStatus\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dates\",\"kind\":\"object\",\"type\":\"Leave_request_date\",\"relationName\":\"Leave_requestToLeave_request_date\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserLeaveRequests\"},{\"name\":\"approvedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovedRequests\"}],\"dbName\":\"leave_requests\"},\"Leave_request_date\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leaveDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isHalfDay\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"halfdayType\",\"kind\":\"enum\",\"type\":\"HalfdayType\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"Leave_request\",\"relationName\":\"Leave_requestToLeave_request_date\"}],\"dbName\":\"leave_request_dates\"},\"Leave_balance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leaveType\",\"kind\":\"enum\",\"type\":\"LeaveType\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Leave_balanceToUser\"}],\"dbName\":\"leave_balances\"},\"Leave_policy\":{\"fields\":[{\"name\":\"leaveType\",\"kind\":\"enum\",\"type\":\"LeaveType\"},{\"name\":\"defaultBalance\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":\"leave_policies\"},\"SyncHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"syncTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"sync_time\"},{\"name\":\"totalUsers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_users\"},{\"name\":\"newUsers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"new_users\"},{\"name\":\"updatedUsers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"updated_users\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"sync_history\"},\"Punch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"eventTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"event_time\"},{\"name\":\"correctEventTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"correct_event_time\"},{\"name\":\"direction\",\"kind\":\"enum\",\"type\":\"Direction\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"Source\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"directionCorrected\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"direction_corrected\"},{\"name\":\"originalDirection\",\"kind\":\"enum\",\"type\":\"Direction\",\"dbName\":\"original_direction\"},{\"name\":\"correctedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"corrected_by\"},{\"name\":\"correctionNote\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"correction_note\"},{\"name\":\"correctedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"corrected_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PunchToUser\"}],\"dbName\":\"punches\"},\"AttendanceDay\":{\"fields\":[{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"workDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"work_date\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"start_time\"},{\"name\":\"firstIn\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_in\"},{\"name\":\"lastOut\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_out\"},{\"name\":\"workedSeconds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"worked_seconds\"},{\"name\":\"notWorkingSeconds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"not_working_seconds\"},{\"name\":\"overtimeSeconds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"overtime_seconds\"},{\"name\":\"hadManual\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"had_manual\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AttendanceStatus\"},{\"name\":\"calculatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"calculated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AttendanceDayToUser\"}],\"dbName\":\"attendance_day\"},\"DeviceConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordEnc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastEventTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authFailedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"authFailureCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"device_configs\"},\"AttendanceConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"otEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"earlyStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"attendance_config\"},\"SalaryConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basicSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"otRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"allowance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deduction\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"effectiveFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalaryConfigToUser\"}],\"dbName\":\"salary_config\"},\"SalaryRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basicSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalLeave\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leaveDeductions\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overtimePay\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"netSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalaryRecordToUser\"}],\"dbName\":\"salary_records\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

